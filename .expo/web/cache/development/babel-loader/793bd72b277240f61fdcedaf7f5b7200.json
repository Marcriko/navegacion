{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from \"react\";\nimport { ListItem } from \"react-native-elements\";\nimport { map } from \"lodash\";\nimport Modal from \"../Modal\";\n3;\nimport ChangeDisplayNameForm from \"./ChangeDisplayNameForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UserOption(props) {\n  var userInfo = props.userInfo,\n      toastRef = props.toastRef;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      renderComponent = _useState4[0],\n      setRenderComponent = _useState4[1];\n\n  useEffect(function () {}, []);\n\n  var selectComponent = function selectComponent(key) {\n    switch (key) {\n      case \"displayName\":\n        setRenderComponent(_jsx(ChangeDisplayNameForm, {\n          displayName: userInfo.displayName,\n          setShowModal: setShowModal,\n          toastRef: toastRef\n        }));\n        setShowModal(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var menuOption = generateOptions(selectComponent);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [map(menuOption, function (menu, index) {\n      return _jsx(ListItem, {\n        title: menu.title,\n        leftIcon: {\n          type: menu.iconType,\n          name: menu.iconNameL,\n          color: menu.iconColor\n        },\n        rightIcon: {\n          type: menu.iconType,\n          name: menu.iconNameR,\n          color: menu.iconColor\n        },\n        containerStyle: styles.menuItem,\n        onPress: menu.onPress\n      }, index);\n    }), renderComponent && _jsx(Modal, {\n      isVisible: showModal,\n      setIsVisible: setShowModal,\n      children: renderComponent\n    })]\n  });\n}\n\nfunction generateOptions(selectComponent) {\n  return [{\n    title: \"Cambiar Nombre\",\n    iconType: \"material-community\",\n    iconNameL: \"account-circle\",\n    iconColor: \"#1cac84\",\n    iconNameR: \"chevron-right\",\n    onPress: function onPress() {\n      return selectComponent(\"displayName\");\n    }\n  }];\n}\n\nvar styles = StyleSheet.create({\n  menuItem: {\n    borderWidth: 1,\n    borderColor: \"#1b3258\",\n    borderRadius: 10,\n    maxHeight: 57\n  },\n  container: {\n    width: \"90%\",\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Marco/Downloads/SIACI (1)/navegacion/src/components/account/UserOption.js"],"names":["React","useState","useEffect","ListItem","map","Modal","ChangeDisplayNameForm","UserOption","props","userInfo","toastRef","showModal","setShowModal","renderComponent","setRenderComponent","selectComponent","key","displayName","menuOption","generateOptions","styles","container","menu","index","title","type","iconType","name","iconNameL","color","iconColor","iconNameR","menuItem","onPress","StyleSheet","create","borderWidth","borderColor","borderRadius","maxHeight","width","marginTop"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { ListItem } from \"react-native-elements\";\r\nimport { map } from \"lodash\";\r\nimport Modal from \"../Modal\";\r\n3;\r\nimport ChangeDisplayNameForm from \"./ChangeDisplayNameForm\";\r\n\r\nexport default function UserOption(props) {\r\n  const { userInfo, toastRef } = props;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [renderComponent, setRenderComponent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n  },[])\r\n\r\n  const selectComponent = (key) => {\r\n    switch (key) {\r\n      case \"displayName\":\r\n        setRenderComponent(\r\n          <ChangeDisplayNameForm\r\n            displayName={userInfo.displayName}\r\n            setShowModal={setShowModal}\r\n            toastRef={toastRef}\r\n          />\r\n        );\r\n        setShowModal(true);\r\n        break;\r\n      // case \"email\":\r\n      //   setRenderComponent(<Text>Cambiar email</Text>);\r\n      //   setShowModal(true);\r\n      //   break;\r\n      // case \"password\":\r\n      //   setRenderComponent(<Text>Cambiar contraseña</Text>);\r\n      //   setShowModal(true);\r\n      //   break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const menuOption = generateOptions(selectComponent);\r\n  // console.log(menuOption);\r\n  return (\r\n    <View style={styles.container}>\r\n      {map(menuOption, (menu, index) => (\r\n        <ListItem\r\n          key={index}\r\n          title={menu.title}\r\n          leftIcon={{\r\n            type: menu.iconType,\r\n            name: menu.iconNameL,\r\n            color: menu.iconColor,\r\n          }}\r\n          rightIcon={{\r\n            type: menu.iconType,\r\n            name: menu.iconNameR,\r\n            color: menu.iconColor,\r\n          }}\r\n          containerStyle={styles.menuItem}\r\n          onPress={menu.onPress}\r\n        />\r\n      ))}\r\n      {renderComponent && (\r\n        <Modal isVisible={showModal} setIsVisible={setShowModal}>\r\n          {renderComponent}\r\n        </Modal>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\nfunction generateOptions(selectComponent) {\r\n  return [\r\n    {\r\n      title: \"Cambiar Nombre\",\r\n      iconType: \"material-community\",\r\n      iconNameL: \"account-circle\",\r\n      iconColor: \"#1cac84\",\r\n      iconNameR: \"chevron-right\",\r\n      onPress: () => selectComponent(\"displayName\"),\r\n    },\r\n    // {\r\n    //   title: \"cambiar email\",\r\n    //   iconType: \"material-community\",\r\n    //   iconNameL: \"at\",\r\n    //   iconColor: \"#1cac84\",\r\n    //   iconNameR: \"chevron-right\",\r\n    //   onPress: () => selectComponent(\"email\"),\r\n    // },\r\n    // {\r\n    //   title: \"cambiar contraseña\",\r\n    //   iconType: \"material-community\",\r\n    //   iconNameL: \"lock-reset\",\r\n    //   iconColor: \"#1cac84\",\r\n    //   iconNameR: \"chevron-right\",\r\n    //   onPress: () => selectComponent(\"password\"),\r\n    // },\r\n  ];\r\n}\r\nconst styles = StyleSheet.create({\r\n  menuItem: {\r\n    borderWidth: 1,\r\n    borderColor: \"#1b3258\",\r\n    borderRadius: 10,\r\n    maxHeight: 57,\r\n  },\r\n  container: {\r\n    width: \"90%\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}